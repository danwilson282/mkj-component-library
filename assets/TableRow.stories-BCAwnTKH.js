import{R as m}from"./iframe-D8dPSlhY.js";import"./preload-helper-PPVm8Dsz.js";function u(d){return null}u.getCollectionNode=function*(a,l){let{children:i,textValue:h,UNSTABLE_childItems:n}=a;yield{type:"item",props:a,textValue:h,"aria-label":a["aria-label"],hasChildNodes:!0,*childNodes(){if(l.showDragButtons&&(yield{type:"cell",key:"header-drag",props:{isDragButtonCell:!0}}),l.showSelectionCheckboxes&&l.selectionMode!=="none"&&(yield{type:"cell",key:"header",props:{isSelectionCell:!0}}),typeof i=="function"){for(let e of l.columns)yield{type:"cell",element:i(e.key),key:e.key};if(n)for(let e of n)yield{type:"item",value:e}}else{let e=[],t=[],o=0;if(m.Children.forEach(i,s=>{if(s.type===u){if(e.length<l.columns.length)throw new Error("All of a Row's child Cells must be positioned before any child Rows.");t.push({type:"item",element:s})}else{e.push({type:"cell",element:s});var c;o+=(c=s.props.colSpan)!==null&&c!==void 0?c:1}}),o!==l.columns.length)throw new Error(`Cell count must match column count. Found ${o} cells and ${l.columns.length} columns.`);yield*e,yield*t}},shouldInvalidate(e){return e.columns.length!==l.columns.length||e.columns.some((t,o)=>t.key!==l.columns[o].key)||e.showSelectionCheckboxes!==l.showSelectionCheckboxes||e.showDragButtons!==l.showDragButtons||e.selectionMode!==l.selectionMode}}};let f=u;var y=f,p=y;const w={title:"HeroUI/TableRow",component:p},r={args:{}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`{
  args: {}
}`,...r.parameters?.docs?.source}}};const k=["Default"];export{r as Default,k as __namedExportsOrder,w as default};
